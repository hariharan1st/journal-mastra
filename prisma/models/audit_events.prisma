enum ActorType {
  admin
  user
  system
}

model AuditEvent {
  id          String    @id @default(uuid()) @db.Uuid
  occurredAt  DateTime  @default(now()) @map("occurred_at") @db.Timestamptz
  actorType   ActorType @map("actor_type")
  eventType   String    @map("event_type") @db.Text
  resourceRef String    @map("resource_ref") @db.Text
  payload     Json      @db.JsonB

  // Separate actor ID fields to avoid foreign key conflicts
  adminActorId     String? @map("admin_actor_id") @db.Uuid
  userActorId      String? @map("user_actor_id") @db.Uuid
  caregiverActorId String? @map("caregiver_actor_id") @db.Uuid

  // Polymorphic actor relations using separate fields
  adminRuleSet     AdminRuleSet?     @relation(fields: [adminActorId], references: [id])
  userActor        UserProfile?      @relation("UserActor", fields: [userActorId], references: [id])
  caregiverActor   CaregiverProfile? @relation("CaregiverActor", fields: [caregiverActorId], references: [id])

  @@index([eventType, occurredAt(sort: Desc)])
  @@map("audit_events")
}